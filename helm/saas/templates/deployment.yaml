
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: {{ .Values.namespace }}
  labels:
    name: ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
        - backend: 
            service:
                  name: clients
                  port: 
                    number: 3000
          pathType: Prefix
          path: {{ .Values.path }}
            

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: client
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: standard
  resources:
    requests:
      storage: 10Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_DATABASE
          value: "saas"
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_PASSWORD
          value: "root"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: client
---
apiVersion: v1
kind: Service
metadata:
  name: mysql 
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clients
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clients
  template:
    metadata:
      labels:
        app: clients
    spec:
      containers:
      - name: clients
        image: edwinwalela/clients-saas
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        - name: DB_URI
          value: "root:root@tcp(mysql:3306)/saas?parseTime=true"
---
apiVersion: v1
kind: Service
metadata:
  name: clients
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: clients
  ports:
  - port: 3000
    targetPort: 3000
---